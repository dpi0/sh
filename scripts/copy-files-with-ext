#!/usr/bin/env bash

# Function to display help menu
display_help() {
    echo "Usage: $0 [OPTIONS]"
    echo "Copy or move files with specified extensions to a specified output directory."
    echo ""
    echo "Options:"
    echo "  -o, --output DIR    Specify the output directory."
    echo "  -e EXT              Specify a file extension to search for (e.g., mp4, avi)."
    echo "  -c, --copy          Copy the files (default behavior)."
    echo "  -m, --move          Move the files."
    echo "  -s, --segregate     Segregate files by extension into appropriate folders."
    echo "  -h, --help          Display this help menu."
    echo ""
    echo "Examples:"
    echo "  Normal Usage:"
    echo "    $0 -e mp4 -e avi -e mkv -e mov -e wmv --output videos --move"
    echo ""
    echo "  Segregate Files by Extension:"
    echo "    $0 --segregate --move"
    exit 0
}

# Function to confirm action
confirm_action() {
    read -p "Are you sure you want to move the files? (y/n): " confirm
    if [[ "$confirm" != "y" && "$confirm" != "Y" ]]; then
        echo "Operation cancelled."
        exit 1
    fi
}

# Initialize variables
output_dir=""
extensions=()
operation="copy"  # Default operation is copy
segregate=false

# Parse command-line arguments
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -o|--output) 
            if [ -z "$2" ]; then
                echo "Error: Output directory not specified."
                display_help
            fi
            output_dir="$2"
            shift 
            ;;
        -e) 
            if [ -z "$2" ]; then
                echo "Error: File extension not specified."
                display_help
            fi
            extensions+=("$2")
            shift 
            ;;
        -c|--copy) 
            operation="copy" 
            ;;
        -m|--move) 
            operation="move" 
            ;;
        -s|--segregate) 
            segregate=true 
            ;;
        -h|--help) 
            display_help 
            ;;
        *) 
            echo "Unknown parameter passed: $1"
            display_help
            ;;
    esac
    shift
done

# Check if output directory is specified
if [ -z "$output_dir" ] && [ "$segregate" = false ]; then
    echo "Error: Output directory not specified."
    display_help
fi

# Check if any extensions are specified
if [ ${#extensions[@]} -eq 0 ] && [ "$segregate" = false ]; then
    echo "Error: No file extensions specified."
    display_help
fi

# Function to segregate files by extension
segregate_files() {
    # Get all unique extensions in the current directory
    extensions=($(fd --max-depth 1 --type f | awk -F. '{print $NF}' | sort -u))

    for ext in "${extensions[@]}"; do
        # Create directory for each extension
        mkdir -p "$ext"

        # Copy or move files to the respective directory
        if [ "$operation" == "copy" ]; then
            fd -e "$ext" --max-depth 1 -x rsync -avh --progress --itemize-changes --stats {} "$ext"/
        elif [ "$operation" == "move" ]; then
            confirm_action
            fd -e "$ext" --max-depth 1 -x mv -v {} "$ext"/
        fi
    done
}

# Create the output directory if it doesn't exist
if [ "$segregate" = false ]; then
    mkdir -p "$output_dir"
fi

# Build the fd command with the specified extensions
fd_command="fd --max-depth 1"
for ext in "${extensions[@]}"; do
    fd_command+=" -e $ext"
done

# Execute the fd command and rsync/mv
if [ "$segregate" = true ]; then
    segregate_files
else
    if [ "$operation" == "copy" ]; then
        $fd_command -x rsync -avh --progress --itemize-changes --stats {} "$output_dir"/
    elif [ "$operation" == "move" ]; then
        confirm_action
        $fd_command -x mv -v {} "$output_dir"/
    else
        echo "Error: Unknown operation specified."
        display_help
    fi
fi
