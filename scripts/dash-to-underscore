#!/usr/bin/env bash

# Global variables
DIR=""
REPLACE_CHAR="-"
WITH_CHAR="_"

# Display help menu
display_help() {
  echo "Usage: $0 <directory> [-du | -ud | --dash-to-underscore | --underscore-to-dash | --help]"
  echo "Options:"
  echo "  -du, --dash-to-underscore    Replace dashes (-) with underscores (_) in filenames and directory names."
  echo "  -ud, --underscore-to-dash    Replace underscores (_) with dashes (-) in filenames and directory names."
  echo "  -h, --help                   Display this help menu."
  echo ""
  echo "Description:"
  echo "  This script recursively renames all files and directories within the specified directory,"
  echo "  replacing all occurrences of a specified character with another character."
  echo "  By default, it replaces dashes (-) with underscores (_) if no option is provided."
  exit 0
}

# Function to rename files and directories
rename_files_and_dirs() {
  local dir="$1"
  local replace_char="$2"
  local with_char="$3"

  for item in "$dir"/*; do
    if [ -d "$item" ]; then
      # Recursively rename files and directories in subdirectories
      rename_files_and_dirs "$item" "$replace_char" "$with_char"
      new_name=$(echo "$item" | tr "$replace_char" "$with_char")
      [ "$item" != "$new_name" ] && mv "$item" "$new_name"
    elif [ -f "$item" ]; then
      # Rename files
      new_name=$(echo "$item" | tr "$replace_char" "$with_char")
      [ "$item" != "$new_name" ] && mv "$item" "$new_name"
    fi
  done
}

# Check if the directory is provided
[ -z "$1" ] && display_help

# Store the directory path
DIR="$1"

# Parse options
case "$2" in
  -du|--dash-to-underscore)
    REPLACE_CHAR="-"
    WITH_CHAR="_"
    ;;
  -ud|--underscore-to-dash)
    REPLACE_CHAR="_"
    WITH_CHAR="-"
    ;;
  -h|--help)
    display_help
    ;;
  *)
    echo "Invalid option. Use -du, -ud, --dash-to-underscore, --underscore-to-dash, or --help."
    exit 1
    ;;
esac

# Call the function with the provided directory and option
rename_files_and_dirs "$DIR" "$REPLACE_CHAR" "$WITH_CHAR"

echo "All $REPLACE_CHAR have been replaced with $WITH_CHAR in filenames and directory names."
