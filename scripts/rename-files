#!/usr/bin/env bash

# Function to display help menu
show_help() {
    echo "Usage: rename-files [OPTIONS]"
    echo "Rename files in the current directory by replacing a substring or file extension."
    echo ""
    echo "Options:"
    echo "  -b, --before STRING   The substring to be replaced in the filenames."
    echo "  -a, --after STRING    The substring to replace the 'before' substring with."
    echo "  -e, --extension       Rename file extensions."
    echo "  -f, --force           Skip dry-run and directly apply renaming."
    echo "  -r, --recursive       Rename files recursively (default is non-recursive)."
    echo "  -h, --help            Display this help menu."
    echo ""
    echo "Examples:"
    echo "  rename-files -b \"bob noel\" -a \"billy joel-mathews\""
    echo "  rename-files -b \"bob noel\" -a \"billy joel-mathews\" -r"
    echo "  rename-files -e -b \".txt\" -a \".md\""
    echo "  rename-files -e -b \".txt\" -a \".md\" -r"
    echo "  rename-files -b yaml -a yml -r"
    exit 0
}

# Default values
DRY_RUN=true
RECURSIVE=false
EXTENSION_RENAME=false
FORCE=false

# Color codes
GREEN='\e[32m'
LIGHTGREEN='\e[38;5;47m'
GOLDEN='\e[38;5;226m'
WHITE='\e[37m'
LIGHT_BLUE='\e[94m'
RESET='\e[0m'

# Parse command-line arguments
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -b|--before) BEFORE="$2"; shift ;;
        -a|--after) AFTER="$2"; shift ;;
        -e|--extension) EXTENSION_RENAME=true ;;
        -f|--force) FORCE=true; DRY_RUN=false ;;
        -r|--recursive) RECURSIVE=true ;;
        -h|--help) show_help ;;
        *) echo "Unknown parameter passed: $1"; show_help ;;
    esac
    shift
done

# Check if required arguments are provided
if [[ -z "$BEFORE" || -z "$AFTER" ]]; then
    echo "Error: --before and --after arguments are required."
    show_help
fi

# Determine the depth option for fd
DEPTH_OPTION=""
if ! $RECURSIVE; then
    DEPTH_OPTION="--max-depth 1"
fi

# Counters for summary
SKIPPED_COUNT=0
WOULD_RENAME_COUNT=0
WOULD_RENAME_FILES=()

# Use fd to find files and rename them
while IFS= read -r FILE; do
    if $EXTENSION_RENAME; then
        # Rename file extension
        if [[ "$FILE" == *"$BEFORE" ]]; then
            NEW_NAME="${FILE%$BEFORE}$AFTER"
            if $DRY_RUN; then
                echo -e "${GREEN}Would rename: $FILE -> $NEW_NAME${RESET}"
                WOULD_RENAME_COUNT=$((WOULD_RENAME_COUNT + 1))
                WOULD_RENAME_FILES+=("$FILE -> $NEW_NAME")
            else
                mv "$FILE" "$NEW_NAME"
                echo -e "${LIGHTGREEN}Renamed: $FILE -> $NEW_NAME${RESET}"
            fi
        else
            echo -e "${LIGHT_BLUE}Skipping: $FILE (extension '$BEFORE' not found)${RESET}"
            SKIPPED_COUNT=$((SKIPPED_COUNT + 1))
        fi
    else
        # Rename substring in filename
        if [[ "$FILE" == *"$BEFORE"* ]]; then
            NEW_NAME="${FILE//$BEFORE/$AFTER}"
            if $DRY_RUN; then
                echo -e "${GREEN}Would rename: $FILE -> $NEW_NAME${RESET}"
                WOULD_RENAME_COUNT=$((WOULD_RENAME_COUNT + 1))
                WOULD_RENAME_FILES+=("$FILE -> $NEW_NAME")
            else
                mv "$FILE" "$NEW_NAME"
                echo -e "${LIGHTGREEN}Renamed: $FILE -> $NEW_NAME${RESET}"
            fi
        else
            echo -e "${LIGHT_BLUE}Skipping: $FILE (substring '$BEFORE' not found)${RESET}"
            SKIPPED_COUNT=$((SKIPPED_COUNT + 1))
        fi
    fi
done < <(fd . $DEPTH_OPTION)

echo "Done."

# Check if there are no files to be renamed
if [[ $WOULD_RENAME_COUNT -eq 0 ]]; then
    echo -e "${LIGHT_BLUE}There are no files to be renamed.${RESET}"
    exit 0
fi

# Summary if dry-run is used
if $DRY_RUN; then
    echo -e "\n${GREEN}Summary:${RESET}"
    echo -e "${LIGHT_BLUE}Files skipped: $SKIPPED_COUNT${RESET}"
    echo -e "${GREEN}Files that would be renamed: $WOULD_RENAME_COUNT${RESET}\n"
    echo -e "${GREEN}List of files that would be renamed:${RESET}\n"
    for FILE in "${WOULD_RENAME_FILES[@]}"; do
        ORIGINAL=${FILE%% -> *}
        NEW=${FILE#* -> }
        echo -e "- $ORIGINAL -> ${LIGHTGREEN}$NEW${RESET}"
    done

    # Prompt to make changes or exit
    echo -e "\n${GOLDEN}Do you want to make the changes? (y/n)${RESET}"
    read -r RESPONSE
    if [[ "$RESPONSE" =~ ^[Yy]$ ]]; then
        DRY_RUN=false
        echo "Applying changes..."
        # Re-run the renaming process without dry-run
        while IFS= read -r FILE; do
            if $EXTENSION_RENAME; then
                # Rename file extension
                if [[ "$FILE" == *"$BEFORE" ]]; then
                    NEW_NAME="${FILE%$BEFORE}$AFTER"
                    mv "$FILE" "$NEW_NAME"
                    echo -e "${LIGHTGREEN}Renamed: $FILE -> $NEW_NAME${RESET}"
                fi
            else
                # Rename substring in filename
                if [[ "$FILE" == *"$BEFORE"* ]]; then
                    NEW_NAME="${FILE//$BEFORE/$AFTER}"
                    mv "$FILE" "$NEW_NAME"
                    echo -e "${LIGHTGREEN}Renamed: $FILE -> $NEW_NAME${RESET}"
                fi
            fi
        done < <(fd . $DEPTH_OPTION)
        echo "Changes applied."
    else
        echo "Exiting without making changes."
    fi
fi
