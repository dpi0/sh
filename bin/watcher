#!/usr/bin/env bash

# simple implementation of 'watch' command. watcher -n 2 -t 30s 'curl -fsSL ip.me'

INTERVAL=1
DURATION=0
CMD=""
PREV_OUTPUT=""
START_TS=""
END_TS=""
DURATION_TS=""
COLOR_CHANGED="\033[1;32m" # green
COLOR_SAME="\033[1;90m"    # gray
COLOR_RESET="\033[0m"

while [[ "$1" == -* ]]; do
  case "$1" in
  -n)
    shift
    INTERVAL="$1"
    ;;
  -t)
    shift
    DURATION="$1"
    ;;
  *)
    echo "Usage: watcher [-n seconds] [-t DURATION] 'command'"
    exit 1
    ;;
  esac
  shift
done

CMD="$*"
if [[ -z "$CMD" ]]; then
  echo "Usage: watcher [-n seconds] [-t DURATION] 'command'"
  exit 1
fi

# Parse DURATION to seconds
if [[ "$DURATION" =~ ^([0-9]+)([smh]?)$ ]]; then
  val="${BASH_REMATCH[1]}"
  unit="${BASH_REMATCH[2]}"
  case "$unit" in
  s | "") DURATION_TS=$val ;;
  m) DURATION_TS=$((val * 60)) ;;
  h) DURATION_TS=$((val * 3600)) ;;
  *)
    echo "Invalid DURATION unit: $unit"
    exit 1
    ;;
  esac
else
  DURATION_TS=0 # infinite if not specified
fi

START_TS=$(date +%s)
[[ $DURATION_TS -gt 0 ]] && END_TS=$((START_TS + DURATION_TS))

while [[ $DURATION_TS -eq 0 || $(date +%s) -lt $END_TS ]]; do
  printf "\033[1;34m[%s]\033[0m \033[1;32m> %s\033[0m\n" "$(date '+%F %T')" "$CMD"
  current_output="$(eval "$CMD" 2>&1)"

  if [[ "$current_output" != "$PREV_OUTPUT" ]]; then
    echo -e "${COLOR_CHANGED}${current_output}${COLOR_RESET}"
  else
    echo -e "${COLOR_SAME}${current_output}${COLOR_RESET}"
  fi

  PREV_OUTPUT="$current_output"
  sleep "$INTERVAL"
done
